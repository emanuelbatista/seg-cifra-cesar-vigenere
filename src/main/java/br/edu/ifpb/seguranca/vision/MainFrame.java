/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifpb.seguranca.vision;

import br.edu.ifpb.seguranca.cesar.CifraCesar;
import br.edu.ifpb.seguranca.exception.ChaveVaziaException;
import br.edu.ifpb.seguranca.vigenere.CifraVigenere;
import javax.swing.JOptionPane;

/**
 *
 * @author emanuel
 */
public class MainFrame extends javax.swing.JFrame {

    private CifraCesar cifraCesar;
    private CifraVigenere cifraVigenere;

    /**
     * Creates new form Main
     */
    public MainFrame() {
        this.cifraCesar = new CifraCesar();
        this.cifraVigenere = new CifraVigenere();
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        crifraGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jCriptografar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jFrase = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jResultado = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        jDescriptografia = new javax.swing.JButton();
        jChave = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jRadioCesar = new javax.swing.JRadioButton();
        jRadioVigenere = new javax.swing.JRadioButton();
        jLabelCifra = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Frase:");

        jCriptografar.setText("Criptografar");
        jCriptografar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCriptografarActionPerformed(evt);
            }
        });

        jFrase.setColumns(20);
        jFrase.setRows(5);
        jScrollPane3.setViewportView(jFrase);

        jScrollPane2.setViewportView(jResultado);

        jLabel2.setText("Resultado:");

        jDescriptografia.setText("Descriptografar");
        jDescriptografia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDescriptografiaActionPerformed(evt);
            }
        });

        jLabel3.setText("Chave:");

        crifraGroup.add(jRadioCesar);
        jRadioCesar.setText("Cesar");

        crifraGroup.add(jRadioVigenere);
        jRadioVigenere.setText("Vigenere");

        jLabelCifra.setText("Cifra:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioCesar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioVigenere))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jCriptografar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jDescriptografia))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                                .addComponent(jScrollPane3)
                                .addComponent(jChave, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(151, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addComponent(jLabelCifra)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jChave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCifra)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioVigenere)
                    .addComponent(jRadioCesar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCriptografar)
                    .addComponent(jDescriptografia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Integer convertChaveCesar(String chave) throws Exception {
        return Integer.parseInt(chave);
    }

    private void jCriptografarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCriptografarActionPerformed
        String texto = jFrase.getText();
        String chave = jChave.getText();
        if (texto == null || texto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "A frase está vazia", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (jRadioCesar.isSelected()) {
            criptografiaCesar(texto, chave);
            return;
        }
        if (jRadioVigenere.isSelected()) {
            criptografiaVigenere(texto, chave);
            return;
        }
        JOptionPane.showMessageDialog(this, "Seleciona uma criptografia", "Atenção", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jCriptografarActionPerformed

    private void criptografiaCesar(String texto, String chave) {
        Integer chaveInt = null;
        try {
            chaveInt = convertChaveCesar(chave);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "O chave tem que ser um número inteiro", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        texto = cifraCesar.criptografar(texto, chaveInt);
        jResultado.setText(texto);
    }

    private void criptografiaVigenere(String texto, String chave) {
        try {
            texto = cifraVigenere.criptografar(texto, chave);
        } catch (ChaveVaziaException ex) {
            JOptionPane.showMessageDialog(this, "A chave está vazia", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        //
        jResultado.setText(texto);
    }

    private void jDescriptografiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDescriptografiaActionPerformed
        String texto = jFrase.getText();
        String chave = jChave.getText();

        if (texto == null || texto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "A frase está vazia", "Atenção", JOptionPane.INFORMATION_MESSAGE);
        }
        if (jRadioCesar.isSelected()) {
            descriptografiaCesar(texto, chave);
            return;
        }
        if (jRadioVigenere.isSelected()) {
            descriptografiaVigenere(texto, chave);
            return;
        }
        JOptionPane.showMessageDialog(this, "Seleciona uma criptografia", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jDescriptografiaActionPerformed

    private void descriptografiaCesar(String texto, String chave) {
        Integer chaveInt = null;
        try {
            chaveInt = convertChaveCesar(chave);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "O chave tem que ser um número inteiro", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        texto = cifraCesar.descriptografar(texto, chaveInt);
        jResultado.setText(texto);
    }

    private void descriptografiaVigenere(String texto, String chave) {
        try {
            texto = cifraVigenere.descriptografar(texto, chave);
        } catch (ChaveVaziaException ex) {
            JOptionPane.showMessageDialog(this, "A chave está vazia", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        //
        jResultado.setText(texto);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup crifraGroup;
    private javax.swing.JTextField jChave;
    private javax.swing.JButton jCriptografar;
    private javax.swing.JButton jDescriptografia;
    private javax.swing.JTextArea jFrase;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelCifra;
    private javax.swing.JRadioButton jRadioCesar;
    private javax.swing.JRadioButton jRadioVigenere;
    private javax.swing.JTextPane jResultado;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
